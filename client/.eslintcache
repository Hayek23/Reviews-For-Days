[
  {
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/index.js": "1",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/reportWebVitals.js":
      "2",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/App.js": "3",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/pages/Home.js": "4",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/pages/Books.js":
      "5",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/pages/Games.js":
      "6",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/pages/SingleBookReview.js":
      "7",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/pages/Signup.js":
      "8",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/pages/Movies.js":
      "9",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/pages/Login.js":
      "10",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/pages/Profile.js":
      "11",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/components/Footer/index.js":
      "12",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/components/Header/index.js":
      "13",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/utils/auth.js":
      "14",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/utils/queries.js":
      "15",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/utils/mutations.js":
      "16",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/components/GameReviewList/index.js":
      "17",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/components/BookReviewForm/index.js":
      "18",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/components/BookReviewList/index.js":
      "19",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/components/MovieReviewForm/index.js":
      "20",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/components/MovieReviewList/index.js":
      "21",
    "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/components/GameReviewForm/index.js":
      "22",
  },
  { size: 500, mtime: 1676331647879, results: "23", hashOfConfig: "24" },
  { size: 362, mtime: 1675987124859, results: "25", hashOfConfig: "24" },
  { size: 2787, mtime: 1676591168816, results: "26", hashOfConfig: "24" },
  { size: 0, mtime: 1676591168817, results: "27", hashOfConfig: "24" },
  { size: 932, mtime: 1676591168817, results: "28", hashOfConfig: "24" },
  { size: 932, mtime: 1676591168817, results: "29", hashOfConfig: "24" },
  { size: 1536, mtime: 1676591168819, results: "30", hashOfConfig: "24" },
  { size: 3028, mtime: 1676599398172, results: "31", hashOfConfig: "24" },
  { size: 946, mtime: 1676591168817, results: "32", hashOfConfig: "24" },
  { size: 2868, mtime: 1676599273954, results: "33", hashOfConfig: "24" },
  { size: 2116, mtime: 1676598893398, results: "34", hashOfConfig: "24" },
  { size: 886, mtime: 1676591270778, results: "35", hashOfConfig: "24" },
  { size: 1853, mtime: 1676591270779, results: "36", hashOfConfig: "24" },
  { size: 1043, mtime: 1675987124859, results: "37", hashOfConfig: "24" },
  { size: 2389, mtime: 1676598893398, results: "38", hashOfConfig: "24" },
  { size: 1508, mtime: 1676598893398, results: "39", hashOfConfig: "24" },
  { size: 1577, mtime: 1676591168817, results: "40", hashOfConfig: "24" },
  { size: 4150, mtime: 1676591168816, results: "41", hashOfConfig: "24" },
  { size: 1565, mtime: 1676591168816, results: "42", hashOfConfig: "24" },
  { size: 4158, mtime: 1676591168817, results: "43", hashOfConfig: "24" },
  { size: 1583, mtime: 1676591168817, results: "44", hashOfConfig: "24" },
  { size: 4150, mtime: 1676598893397, results: "45", hashOfConfig: "24" },
  {
    filePath: "46",
    messages: "47",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 0,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    usedDeprecatedRules: "48",
  },
  "1inoy6d",
  {
    filePath: "49",
    messages: "50",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 0,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    usedDeprecatedRules: "48",
  },
  {
    filePath: "51",
    messages: "52",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 1,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    source: "53",
    usedDeprecatedRules: "48",
  },
  {
    filePath: "54",
    messages: "55",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 0,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    usedDeprecatedRules: "48",
  },
  {
    filePath: "56",
    messages: "57",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 0,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    usedDeprecatedRules: "48",
  },
  {
    filePath: "58",
    messages: "59",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 0,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    usedDeprecatedRules: "48",
  },
  {
    filePath: "60",
    messages: "61",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 1,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    source: "62",
    usedDeprecatedRules: "48",
  },
  {
    filePath: "63",
    messages: "64",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 0,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
  },
  {
    filePath: "65",
    messages: "66",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 0,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    usedDeprecatedRules: "48",
  },
  {
    filePath: "67",
    messages: "68",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 0,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
  },
  {
    filePath: "69",
    messages: "70",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 0,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    usedDeprecatedRules: "48",
  },
  {
    filePath: "71",
    messages: "72",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 0,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    usedDeprecatedRules: "48",
  },
  {
    filePath: "73",
    messages: "74",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 0,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    usedDeprecatedRules: "48",
  },
  {
    filePath: "75",
    messages: "76",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 1,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    source: "77",
    usedDeprecatedRules: "48",
  },
  {
    filePath: "78",
    messages: "79",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 0,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    usedDeprecatedRules: "48",
  },
  {
    filePath: "80",
    messages: "81",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 0,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    usedDeprecatedRules: "48",
  },
  {
    filePath: "82",
    messages: "83",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 0,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    usedDeprecatedRules: "48",
  },
  {
    filePath: "84",
    messages: "85",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 1,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    source: "86",
    usedDeprecatedRules: "48",
  },
  {
    filePath: "87",
    messages: "88",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 0,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    usedDeprecatedRules: "48",
  },
  {
    filePath: "89",
    messages: "90",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 1,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    source: "91",
    usedDeprecatedRules: "48",
  },
  {
    filePath: "92",
    messages: "93",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 0,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    usedDeprecatedRules: "48",
  },
  {
    filePath: "94",
    messages: "95",
    errorCount: 0,
    fatalErrorCount: 0,
    warningCount: 1,
    fixableErrorCount: 0,
    fixableWarningCount: 0,
    source: "96",
    usedDeprecatedRules: "48",
  },
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/index.js",
  [],
  ["97", "98"],
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/reportWebVitals.js",
  [],
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/App.js",
  ["99"],
  "import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Books from './pages/Books';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport SingleBookReview from './pages/SingleBookReview';\nimport Profile from './pages/Profile';\nimport Games from './pages/Games';\nimport Movies from './pages/Movies';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n               {/* <Route \n                path=\"/\"\n                element={<Home />}\n              /> */}\n              <Route \n                path=\"/Books\"\n                element={<Books />}\n              />\n              <Route\n                path=\"/Movies\"\n                element={<Movies />}\n              />\n              <Route\n                path=\"/Games\"\n                element={<Games />}\n              />\n              <Route \n                path=\"/login\"\n                element={<Login />}\n              />\n              <Route \n                path=\"/signup\"\n                element={<Signup />}\n              />\n              <Route \n                path=\"/me\"\n                element={<Profile />}\n              />\n              <Route \n                path=\"/profiles/:username\"\n                element={<Profile />}\n              />\n              <Route \n                path=\"/bookreviews/:bookReviewId\"\n                element={<SingleBookReview />}\n              />\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n",
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/pages/Home.js",
  [],
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/pages/Books.js",
  [],
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/pages/Games.js",
  [],
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/pages/SingleBookReview.js",
  ["100"],
  "import React from 'react';\n\n// Import the `useParams()` hook\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport BookReviewList from '../components/BookReviewList';\nimport BookReviewForm from '../components/BookReviewForm';\n\nimport { QUERY_SINGLE_BOOK } from '../utils/queries';\n\nconst SingleBookReview = () => {\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\n  const { bookReviewId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_SINGLE_BOOK, {\n    // pass URL parameter\n    variables: { bookReviewID: bookReviewId },\n  });\n\n  const bookReview = data?.bookReview || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  console.log(bookReview)\n  return (\n    <div className=\"my-3\">\n      <h3 className=\"card-header bg-dark text-light p-2 m-0\">\n        {bookReview.reviewAuthor} <br />\n        <span style={{ fontSize: '1rem' }}>\n          had this thought on {bookReview.createdAt}\n        </span>\n      </h3>\n      <div className=\"bg-light py-4\">\n        <blockquote\n          className=\"p-4\"\n          style={{\n            fontSize: '1.5rem',\n            fontStyle: 'italic',\n            border: '2px dotted #1a1a1a',\n            lineHeight: '1.5',\n          }}\n        >\n          {bookReview.reviewText}\n        </blockquote>\n      </div>\n      <div className=\"m-3 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\n        <BookReviewForm bookReviewId={bookReview._id} />\n      </div>\n    </div>\n  );\n};\n\nexport default SingleBookReview;\n",
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/pages/Signup.js",
  [],
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/pages/Movies.js",
  [],
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/pages/Login.js",
  [],
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/pages/Profile.js",
  [],
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/components/Footer/index.js",
  [],
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/components/Header/index.js",
  [],
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/utils/auth.js",
  ["101"],
  "import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    // If there is a token and it's not expired, return `true`\n    return token && !this.isTokenExpired(token) ? true : false;\n  }\n\n  isTokenExpired(token) {\n    // Decode the token to get its expiration time that was set by the server\n    const decoded = decode(token);\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\n    if (decoded.exp < Date.now() / 1000) {\n      localStorage.removeItem('id_token');\n      return true;\n    }\n    // If token hasn't passed its expiration time, return `false`\n    return false;\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.reload();\n  }\n}\n\nexport default new AuthService();\n",
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/utils/queries.js",
  [],
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/utils/mutations.js",
  [],
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/components/GameReviewList/index.js",
  [],
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/components/BookReviewForm/index.js",
  ["102"],
  "import { useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_BOOK_REVIEW } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\n    \n    const BookReviewForm = () => {\n      const [title, setTitle] = useState('');\n      const [time, setTime] = useState('');\n      const [genre, setGenre] = useState('');\n      const [reviewText, setReviewText] = useState('');\n    \n      const [characterCount, setCharacterCount] = useState(0);\n    \n      const [addBookReview, { error }] = useMutation(ADD_BOOK_REVIEW);\n    \n      const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        \n        try {\n          const { data } = await addBookReview({\n            variables: {\n              title,\n              genre,\n              time,\n              reviewText,\n              reviewAuthor: Auth.getProfile().data.username,\n            },\n          });\n          setTitle('');\n          setReviewText('');\n          setTime('');\n          setGenre('');\n        } catch (err) {\n          console.error(err);\n        }\n        \n      };\n      \n      const handleChange = (event) => {\n        const { name, value } = event.target;\n    \n        if (name === 'reviewText' && value.length <= 500) {\n          setReviewText(value);\n          setCharacterCount(value.length);\n        }\n        if (name === 'title') {\n          setTitle(value);\n        }\n        if (name === 'genre') {\n          setGenre(value);\n        }\n        if (name === 'time') {\n          setTime(value)\n        }\n      };\n      \n      return (\n        \n        <div>\n          <h3>What are your thoughts on this book?</h3>\n    \n          {Auth.loggedIn() ? (\n            <>\n              <p\n                className={`m-0 ${\n                  characterCount === 500 || error ? 'text-danger' : ''\n                }`}\n              >\n                Character Count: {characterCount}/500\n              </p>\n              <form\n                className=\"flex-row justify-center justify-space-between-md align-center\"\n                onSubmit={handleFormSubmit}\n              >\n                <div className=\"col-12 col-lg-9\">\n                <textarea\n                    name=\"title\"\n                    placeholder=\"Book Title\"\n                    value={title}\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\n                    onChange={handleChange}\n                  ></textarea>\n                  <textarea\n                    name=\"reviewText\"\n                    placeholder=\"Here's a new review...\"\n                    value={reviewText}\n                    className=\"form-input w-100\"\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\n                    onChange={handleChange}\n                  ></textarea>\n                  <textarea\n                    name=\"genre\"\n                    placeholder=\"Genre\"\n                    value={genre}\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\n                    onChange={handleChange}\n                  ></textarea>\n                  <textarea\n                    name=\"time\"\n                    placeholder=\"Time spent\"\n                    value={time}\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\n                    onChange={handleChange}\n                  ></textarea>\n                </div>\n    \n                <div className=\"col-12 col-lg-3\">\n                  <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                    Add review\n                  </button>\n                </div>\n                {error && (\n                  <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                    {error.message}\n                  </div>\n                )}\n              </form>\n            </>\n          ) : (\n            <p>\n              Please login to share your review.{' '}\n              <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n            </p>\n          )}\n        </div>\n        \n      );\n    };\n    \n    \n    export default BookReviewForm;\n\n\n\n\n",
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/components/BookReviewList/index.js",
  [],
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/components/MovieReviewForm/index.js",
  ["103"],
  "import { useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_MOVIE_REVIEW } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\n    \n    const MovieReviewForm = () => {\n      const [title, setTitle] = useState('');\n      const [time, setTime] = useState('');\n      const [genre, setGenre] = useState('');\n      const [reviewText, setReviewText] = useState('');\n    \n      const [characterCount, setCharacterCount] = useState(0);\n    \n      const [addMovieReview, { error }] = useMutation(ADD_MOVIE_REVIEW);\n    \n      const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        \n        try {\n          const { data } = await addMovieReview({\n            variables: {\n              title,\n              genre,\n              time,\n              reviewText,\n              reviewAuthor: Auth.getProfile().data.username,\n            },\n          });\n          setTitle('');\n          setReviewText('');\n          setTime('');\n          setGenre('');\n        } catch (err) {\n          console.error(err);\n        }\n        \n      };\n      \n      const handleChange = (event) => {\n        const { name, value } = event.target;\n    \n        if (name === 'reviewText' && value.length <= 500) {\n          setReviewText(value);\n          setCharacterCount(value.length);\n        }\n        if (name === 'title') {\n          setTitle(value);\n        }\n        if (name === 'genre') {\n          setGenre(value);\n        }\n        if (name === 'time') {\n          setTime(value)\n        }\n      };\n      \n      return (\n        \n        <div>\n          <h3>What are your thoughts on this Movie?</h3>\n    \n          {Auth.loggedIn() ? (\n            <>\n              <p\n                className={`m-0 ${\n                  characterCount === 500 || error ? 'text-danger' : ''\n                }`}\n              >\n                Character Count: {characterCount}/500\n              </p>\n              <form\n                className=\"flex-row justify-center justify-space-between-md align-center\"\n                onSubmit={handleFormSubmit}\n              >\n                <div className=\"col-12 col-lg-9\">\n                <textarea\n                    name=\"title\"\n                    placeholder=\"Movie Title\"\n                    value={title}\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\n                    onChange={handleChange}\n                  ></textarea>\n                  <textarea\n                    name=\"reviewText\"\n                    placeholder=\"Here's a new review...\"\n                    value={reviewText}\n                    className=\"form-input w-100\"\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\n                    onChange={handleChange}\n                  ></textarea>\n                  <textarea\n                    name=\"genre\"\n                    placeholder=\"Genre\"\n                    value={genre}\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\n                    onChange={handleChange}\n                  ></textarea>\n                  <textarea\n                    name=\"time\"\n                    placeholder=\"Time spent\"\n                    value={time}\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\n                    onChange={handleChange}\n                  ></textarea>\n                </div>\n    \n                <div className=\"col-12 col-lg-3\">\n                  <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                    Add review\n                  </button>\n                </div>\n                {error && (\n                  <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                    {error.message}\n                  </div>\n                )}\n              </form>\n            </>\n          ) : (\n            <p>\n              Please login to share your review.{' '}\n              <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n            </p>\n          )}\n        </div>\n        \n      );\n    };\n    \n    \n    export default MovieReviewForm;\n\n\n\n\n",
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/components/MovieReviewList/index.js",
  [],
  "/Users/zackhuston/bootcamp/Reviews-For-Days/client/src/components/GameReviewForm/index.js",
  ["104"],
  "import { useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_GAME_REVIEW } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\n    \n    const GameReviewForm = () => {\n      const [title, setTitle] = useState('');\n      const [time, setTime] = useState('');\n      const [genre, setGenre] = useState('');\n      const [reviewText, setReviewText] = useState('');\n    \n      const [characterCount, setCharacterCount] = useState(0);\n    \n      const [addGameReview, { error }] = useMutation(ADD_GAME_REVIEW);\n    \n      const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        \n        try {\n          const { data } = await addGameReview({\n            variables: {\n              title,\n              genre,\n              time,\n              reviewText,\n              reviewAuthor: Auth.getProfile().data.username,\n            },\n          });\n          setTitle('');\n          setReviewText('');\n          setTime('');\n          setGenre('');\n        } catch (err) {\n          console.error(err);\n        }\n        \n      };\n      \n      const handleChange = (event) => {\n        const { name, value } = event.target;\n    \n        if (name === 'reviewText' && value.length <= 500) {\n          setReviewText(value);\n          setCharacterCount(value.length);\n        }\n        if (name === 'title') {\n          setTitle(value);\n        }\n        if (name === 'genre') {\n          setGenre(value);\n        }\n        if (name === 'time') {\n          setTime(value)\n        }\n      };\n      \n      return (\n        \n        <div>\n          <h3>What are your thoughts on this game?</h3>\n    \n          {Auth.loggedIn() ? (\n            <>\n              <p\n                className={`m-0 ${\n                  characterCount === 500 || error ? 'text-danger' : ''\n                }`}\n              >\n                Character Count: {characterCount}/500\n              </p>\n              <form\n                className=\"flex-row justify-center justify-space-between-md align-center\"\n                onSubmit={handleFormSubmit}\n              >\n                <div className=\"col-12 col-lg-9\">\n                <textarea\n                    name=\"title\"\n                    placeholder=\"Game Title\"\n                    value={title}\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\n                    onChange={handleChange}\n                  ></textarea>\n                  <textarea\n                    name=\"reviewText\"\n                    placeholder=\"Here's a new review...\"\n                    value={reviewText}\n                    className=\"form-input w-100\"\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\n                    onChange={handleChange}\n                  ></textarea>\n                  <textarea\n                    name=\"genre\"\n                    placeholder=\"Genre\"\n                    value={genre}\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\n                    onChange={handleChange}\n                  ></textarea>\n                  <textarea\n                    name=\"time\"\n                    placeholder=\"Time spent\"\n                    value={time}\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\n                    onChange={handleChange}\n                  ></textarea>\n                </div>\n    \n                <div className=\"col-12 col-lg-3\">\n                  <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                    Add review\n                  </button>\n                </div>\n                {error && (\n                  <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                    {error.message}\n                  </div>\n                )}\n              </form>\n            </>\n          ) : (\n            <p>\n              Please login to share your review.{' '}\n              <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n            </p>\n          )}\n        </div>\n        \n      );\n    };\n    \n    \n    export default GameReviewForm;\n\n\n\n\n",
  { ruleId: "105", replacedBy: "106" },
  { ruleId: "107", replacedBy: "108" },
  {
    ruleId: "109",
    severity: 1,
    message: "110",
    line: 11,
    column: 8,
    nodeType: "111",
    messageId: "112",
    endLine: 11,
    endColumn: 12,
  },
  {
    ruleId: "109",
    severity: 1,
    message: "113",
    line: 7,
    column: 8,
    nodeType: "111",
    messageId: "112",
    endLine: 7,
    endColumn: 22,
  },
  {
    ruleId: "114",
    severity: 1,
    message: "115",
    line: 41,
    column: 1,
    nodeType: "116",
    endLine: 41,
    endColumn: 34,
  },
  {
    ruleId: "109",
    severity: 1,
    message: "117",
    line: 24,
    column: 19,
    nodeType: "111",
    messageId: "112",
    endLine: 24,
    endColumn: 23,
  },
  {
    ruleId: "109",
    severity: 1,
    message: "117",
    line: 24,
    column: 19,
    nodeType: "111",
    messageId: "112",
    endLine: 24,
    endColumn: 23,
  },
  {
    ruleId: "109",
    severity: 1,
    message: "117",
    line: 24,
    column: 19,
    nodeType: "111",
    messageId: "112",
    endLine: 24,
    endColumn: 23,
  },
  "no-native-reassign",
  ["118"],
  "no-negated-in-lhs",
  ["119"],
  "no-unused-vars",
  "'Home' is defined but never used.",
  "Identifier",
  "unusedVar",
  "'BookReviewList' is defined but never used.",
  "import/no-anonymous-default-export",
  "Assign instance to a variable before exporting as module default",
  "ExportDefaultDeclaration",
  "'data' is assigned a value but never used.",
  "no-global-assign",
  "no-unsafe-negation",
];
