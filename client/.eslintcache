[{"C:\\Users\\hayek\\class-work\\review-project\\client\\src\\index.js":"1","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\reportWebVitals.js":"2","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\App.js":"3","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\pages\\Login.js":"4","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\pages\\SingleBookReview.js":"5","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\pages\\Profile.js":"6","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\pages\\Books.js":"7","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\pages\\Signup.js":"8","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\pages\\Movies.js":"9","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\pages\\Games.js":"10","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\pages\\Home.js":"11","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\components\\Header\\index.js":"12","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\components\\Footer\\index.js":"13","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\utils\\mutations.js":"14","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\utils\\auth.js":"15","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\utils\\queries.js":"16","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\components\\BookReviewForm\\index.js":"17","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\components\\GameReviewForm\\index.js":"18","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\components\\MovieReviewForm\\index.js":"19","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\components\\BookReviewList\\index.js":"20","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\components\\GameReviewList\\index.js":"21","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\components\\MovieReviewList\\index.js":"22"},{"size":517,"mtime":1666750196000,"results":"23","hashOfConfig":"24"},{"size":375,"mtime":1666750196000,"results":"25","hashOfConfig":"24"},{"size":2786,"mtime":1676415324541,"results":"26","hashOfConfig":"24"},{"size":2597,"mtime":1666750196000,"results":"27","hashOfConfig":"24"},{"size":1502,"mtime":1676417591353,"results":"28","hashOfConfig":"24"},{"size":1808,"mtime":1676417981786,"results":"29","hashOfConfig":"24"},{"size":928,"mtime":1676415104965,"results":"30","hashOfConfig":"24"},{"size":2758,"mtime":1666750196000,"results":"31","hashOfConfig":"24"},{"size":942,"mtime":1676415274987,"results":"32","hashOfConfig":"24"},{"size":928,"mtime":1676417795366,"results":"33","hashOfConfig":"24"},{"size":0,"mtime":1676417951217,"results":"34","hashOfConfig":"24"},{"size":1727,"mtime":1676341166546,"results":"35","hashOfConfig":"24"},{"size":878,"mtime":1666750196000,"results":"36","hashOfConfig":"24"},{"size":1389,"mtime":1676419514352,"results":"37","hashOfConfig":"24"},{"size":1084,"mtime":1666750196000,"results":"38","hashOfConfig":"24"},{"size":2098,"mtime":1676421563537,"results":"39","hashOfConfig":"24"},{"size":4150,"mtime":1676421747243,"results":"40","hashOfConfig":"24"},{"size":4289,"mtime":1676422046515,"results":"41","hashOfConfig":"24"},{"size":4297,"mtime":1676422116988,"results":"42","hashOfConfig":"24"},{"size":1570,"mtime":1676423888093,"results":"43","hashOfConfig":"24"},{"size":1628,"mtime":1676423875655,"results":"44","hashOfConfig":"24"},{"size":1539,"mtime":1676423871809,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"dtjq42",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\hayek\\class-work\\review-project\\client\\src\\index.js",[],["97","98"],"C:\\Users\\hayek\\class-work\\review-project\\client\\src\\reportWebVitals.js",[],"C:\\Users\\hayek\\class-work\\review-project\\client\\src\\App.js",["99"],"import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Books from './pages/Books';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport SingleBookReview from './pages/SingleBookReview';\nimport Profile from './pages/Profile';\nimport Games from './pages/Games';\nimport Movies from './pages/Movies';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Routes>\n               {/* <Route \n                path=\"/\"\n                element={<Home />}\n              /> */}\n              <Route \n                path=\"/Books\"\n                element={<Books />}\n              />\n              <Route\n                path=\"/Movies\"\n                element={<Movies />}\n              />\n              <Route\n                path=\"/VideoGames\"\n                element={<Games />}\n              />\n              <Route \n                path=\"/login\"\n                element={<Login />}\n              />\n              <Route \n                path=\"/signup\"\n                element={<Signup />}\n              />\n              <Route \n                path=\"/me\"\n                element={<Profile />}\n              />\n              <Route \n                path=\"/profiles/:username\"\n                element={<Profile />}\n              />\n              <Route \n                path=\"/thoughts/:thoughtId\"\n                element={<SingleBookReview />}\n              />\n            </Routes>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\pages\\Login.js",[],"C:\\Users\\hayek\\class-work\\review-project\\client\\src\\pages\\SingleBookReview.js",["100"],"import React from 'react';\n\n// Import the `useParams()` hook\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport BookReviewList from '../components/BookReviewList';\nimport BookReviewForm from '../components/BookReviewForm';\n\nimport { QUERY_SINGLE_BOOK } from '../utils/queries';\n\nconst SingleReview = () => {\n  // Use `useParams()` to retrieve value of the route parameter `:profileId`\n  const { bookReviewId } = useParams();\n\n  const { loading, data } = useQuery(QUERY_SINGLE_BOOK, {\n    // pass URL parameter\n    variables: { bookReviewId: bookReviewId },\n  });\n\n  const bookReview = data?.bookReview || {};\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div className=\"my-3\">\n      <h3 className=\"card-header bg-dark text-light p-2 m-0\">\n        {bookReview.reviewAuthor} <br />\n        <span style={{ fontSize: '1rem' }}>\n          had this thought on {bookReview.createdAt}\n        </span>\n      </h3>\n      <div className=\"bg-light py-4\">\n        <blockquote\n          className=\"p-4\"\n          style={{\n            fontSize: '1.5rem',\n            fontStyle: 'italic',\n            border: '2px dotted #1a1a1a',\n            lineHeight: '1.5',\n          }}\n        >\n          {bookReview.reviewText}\n        </blockquote>\n      </div>\n      <div className=\"m-3 p-4\" style={{ border: '1px dotted #1a1a1a' }}>\n        <BookReviewForm bookReviewId={bookReview._id} />\n      </div>\n    </div>\n  );\n};\n\nexport default SingleReview;\n","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\pages\\Profile.js",[],"C:\\Users\\hayek\\class-work\\review-project\\client\\src\\pages\\Books.js",[],"C:\\Users\\hayek\\class-work\\review-project\\client\\src\\pages\\Signup.js",[],"C:\\Users\\hayek\\class-work\\review-project\\client\\src\\pages\\Movies.js",[],"C:\\Users\\hayek\\class-work\\review-project\\client\\src\\pages\\Games.js",[],"C:\\Users\\hayek\\class-work\\review-project\\client\\src\\pages\\Home.js",[],"C:\\Users\\hayek\\class-work\\review-project\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\hayek\\class-work\\review-project\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\hayek\\class-work\\review-project\\client\\src\\utils\\mutations.js",[],"C:\\Users\\hayek\\class-work\\review-project\\client\\src\\utils\\auth.js",["101"],"import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n  getProfile() {\r\n    return decode(this.getToken());\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = this.getToken();\r\n    // If there is a token and it's not expired, return `true`\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n  }\r\n\r\n  isTokenExpired(token) {\r\n    // Decode the token to get its expiration time that was set by the server\r\n    const decoded = decode(token);\r\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('id_token');\r\n      return true;\r\n    }\r\n    // If token hasn't passed its expiration time, return `false`\r\n    return false;\r\n  }\r\n\r\n  getToken() {\r\n    return localStorage.getItem('id_token');\r\n  }\r\n\r\n  login(idToken) {\r\n    localStorage.setItem('id_token', idToken);\r\n    window.location.assign('/');\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('id_token');\r\n    window.location.reload();\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\utils\\queries.js",[],"C:\\Users\\hayek\\class-work\\review-project\\client\\src\\components\\BookReviewForm\\index.js",["102"],"import { useState } from \"react\";\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_BOOK_REVIEW } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\n    \n    const BookReviewForm = () => {\n      const [title, setTitle] = useState('');\n      const [time, setTime] = useState('');\n      const [genre, setGenre] = useState('');\n      const [reviewText, setReviewText] = useState('');\n    \n      const [characterCount, setCharacterCount] = useState(0);\n    \n      const [addBookReview, { error }] = useMutation(ADD_BOOK_REVIEW);\n    \n      const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        \n        try {\n          const { data } = await addBookReview({\n            variables: {\n              title,\n              genre,\n              time,\n              reviewText,\n              reviewAuthor: Auth.getProfile().data.username,\n            },\n          });\n          setTitle('');\n          setReviewText('');\n          setTime('');\n          setGenre('');\n        } catch (err) {\n          console.error(err);\n        }\n        \n      };\n      \n      const handleChange = (event) => {\n        const { name, value } = event.target;\n    \n        if (name === 'reviewText' && value.length <= 500) {\n          setReviewText(value);\n          setCharacterCount(value.length);\n        }\n        if (name === 'title') {\n          setTitle(value);\n        }\n        if (name === 'genre') {\n          setGenre(value);\n        }\n        if (name === 'time') {\n          setTime(value)\n        }\n      };\n      \n      return (\n        \n        <div>\n          <h3>What are your thoughts on this book?</h3>\n    \n          {Auth.loggedIn() ? (\n            <>\n              <p\n                className={`m-0 ${\n                  characterCount === 500 || error ? 'text-danger' : ''\n                }`}\n              >\n                Character Count: {characterCount}/500\n              </p>\n              <form\n                className=\"flex-row justify-center justify-space-between-md align-center\"\n                onSubmit={handleFormSubmit}\n              >\n                <div className=\"col-12 col-lg-9\">\n                <textarea\n                    name=\"title\"\n                    placeholder=\"Book Title\"\n                    value={title}\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\n                    onChange={handleChange}\n                  ></textarea>\n                  <textarea\n                    name=\"reviewText\"\n                    placeholder=\"Here's a new review...\"\n                    value={reviewText}\n                    className=\"form-input w-100\"\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\n                    onChange={handleChange}\n                  ></textarea>\n                  <textarea\n                    name=\"genre\"\n                    placeholder=\"Genre\"\n                    value={genre}\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\n                    onChange={handleChange}\n                  ></textarea>\n                  <textarea\n                    name=\"time\"\n                    placeholder=\"Time spent\"\n                    value={time}\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\n                    onChange={handleChange}\n                  ></textarea>\n                </div>\n    \n                <div className=\"col-12 col-lg-3\">\n                  <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                    Add review\n                  </button>\n                </div>\n                {error && (\n                  <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                    {error.message}\n                  </div>\n                )}\n              </form>\n            </>\n          ) : (\n            <p>\n              Please login to share your review.{' '}\n              <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n            </p>\n          )}\n        </div>\n        \n      );\n    };\n    \n    \n    export default BookReviewForm;\n\n\n\n\n","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\components\\GameReviewForm\\index.js",["103"],"import { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_GAME_REVIEW } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\n    \r\n    const GameReviewForm = () => {\r\n      const [title, setTitle] = useState('');\r\n      const [time, setTime] = useState('');\r\n      const [genre, setGenre] = useState('');\r\n      const [reviewText, setReviewText] = useState('');\r\n    \r\n      const [characterCount, setCharacterCount] = useState(0);\r\n    \r\n      const [addGameReview, { error }] = useMutation(ADD_GAME_REVIEW);\r\n    \r\n      const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        try {\r\n          const { data } = await addGameReview({\r\n            variables: {\r\n              title,\r\n              genre,\r\n              time,\r\n              reviewText,\r\n              reviewAuthor: Auth.getProfile().data.username,\r\n            },\r\n          });\r\n          setTitle('');\r\n          setReviewText('');\r\n          setTime('');\r\n          setGenre('');\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n        \r\n      };\r\n      \r\n      const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n    \r\n        if (name === 'reviewText' && value.length <= 500) {\r\n          setReviewText(value);\r\n          setCharacterCount(value.length);\r\n        }\r\n        if (name === 'title') {\r\n          setTitle(value);\r\n        }\r\n        if (name === 'genre') {\r\n          setGenre(value);\r\n        }\r\n        if (name === 'time') {\r\n          setTime(value)\r\n        }\r\n      };\r\n      \r\n      return (\r\n        \r\n        <div>\r\n          <h3>What are your thoughts on this game?</h3>\r\n    \r\n          {Auth.loggedIn() ? (\r\n            <>\r\n              <p\r\n                className={`m-0 ${\r\n                  characterCount === 500 || error ? 'text-danger' : ''\r\n                }`}\r\n              >\r\n                Character Count: {characterCount}/500\r\n              </p>\r\n              <form\r\n                className=\"flex-row justify-center justify-space-between-md align-center\"\r\n                onSubmit={handleFormSubmit}\r\n              >\r\n                <div className=\"col-12 col-lg-9\">\r\n                <textarea\r\n                    name=\"title\"\r\n                    placeholder=\"Book Title\"\r\n                    value={title}\r\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                    onChange={handleChange}\r\n                  ></textarea>\r\n                  <textarea\r\n                    name=\"reviewText\"\r\n                    placeholder=\"Here's a new review...\"\r\n                    value={reviewText}\r\n                    className=\"form-input w-100\"\r\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                    onChange={handleChange}\r\n                  ></textarea>\r\n                  <textarea\r\n                    name=\"genre\"\r\n                    placeholder=\"Genre\"\r\n                    value={genre}\r\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                    onChange={handleChange}\r\n                  ></textarea>\r\n                  <textarea\r\n                    name=\"time\"\r\n                    placeholder=\"Time spent\"\r\n                    value={time}\r\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                    onChange={handleChange}\r\n                  ></textarea>\r\n                </div>\r\n    \r\n                <div className=\"col-12 col-lg-3\">\r\n                  <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                    Add review\r\n                  </button>\r\n                </div>\r\n                {error && (\r\n                  <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n                    {error.message}\r\n                  </div>\r\n                )}\r\n              </form>\r\n            </>\r\n          ) : (\r\n            <p>\r\n              Please login to share your review.{' '}\r\n              <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n            </p>\r\n          )}\r\n        </div>\r\n        \r\n      );\r\n    };\r\n    \r\n    \r\n    export default GameReviewForm;\r\n\r\n\r\n\r\n\r\n","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\components\\MovieReviewForm\\index.js",["104"],"import { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_MOVIE_REVIEW } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\n    \r\n    const MovieReviewForm = () => {\r\n      const [title, setTitle] = useState('');\r\n      const [time, setTime] = useState('');\r\n      const [genre, setGenre] = useState('');\r\n      const [reviewText, setReviewText] = useState('');\r\n    \r\n      const [characterCount, setCharacterCount] = useState(0);\r\n    \r\n      const [addMovieReview, { error }] = useMutation(ADD_MOVIE_REVIEW);\r\n    \r\n      const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        try {\r\n          const { data } = await addMovieReview({\r\n            variables: {\r\n              title,\r\n              genre,\r\n              time,\r\n              reviewText,\r\n              reviewAuthor: Auth.getProfile().data.username,\r\n            },\r\n          });\r\n          setTitle('');\r\n          setReviewText('');\r\n          setTime('');\r\n          setGenre('');\r\n        } catch (err) {\r\n          console.error(err);\r\n        }\r\n        \r\n      };\r\n      \r\n      const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n    \r\n        if (name === 'reviewText' && value.length <= 500) {\r\n          setReviewText(value);\r\n          setCharacterCount(value.length);\r\n        }\r\n        if (name === 'title') {\r\n          setTitle(value);\r\n        }\r\n        if (name === 'genre') {\r\n          setGenre(value);\r\n        }\r\n        if (name === 'time') {\r\n          setTime(value)\r\n        }\r\n      };\r\n      \r\n      return (\r\n        \r\n        <div>\r\n          <h3>What are your thoughts on this Movie?</h3>\r\n    \r\n          {Auth.loggedIn() ? (\r\n            <>\r\n              <p\r\n                className={`m-0 ${\r\n                  characterCount === 500 || error ? 'text-danger' : ''\r\n                }`}\r\n              >\r\n                Character Count: {characterCount}/500\r\n              </p>\r\n              <form\r\n                className=\"flex-row justify-center justify-space-between-md align-center\"\r\n                onSubmit={handleFormSubmit}\r\n              >\r\n                <div className=\"col-12 col-lg-9\">\r\n                <textarea\r\n                    name=\"title\"\r\n                    placeholder=\"Movie Title\"\r\n                    value={title}\r\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                    onChange={handleChange}\r\n                  ></textarea>\r\n                  <textarea\r\n                    name=\"reviewText\"\r\n                    placeholder=\"Here's a new review...\"\r\n                    value={reviewText}\r\n                    className=\"form-input w-100\"\r\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                    onChange={handleChange}\r\n                  ></textarea>\r\n                  <textarea\r\n                    name=\"genre\"\r\n                    placeholder=\"Genre\"\r\n                    value={genre}\r\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                    onChange={handleChange}\r\n                  ></textarea>\r\n                  <textarea\r\n                    name=\"time\"\r\n                    placeholder=\"Time spent\"\r\n                    value={time}\r\n                    style={{ lineHeight: '1.5', resize: 'vertical' }}\r\n                    onChange={handleChange}\r\n                  ></textarea>\r\n                </div>\r\n    \r\n                <div className=\"col-12 col-lg-3\">\r\n                  <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\r\n                    Add review\r\n                  </button>\r\n                </div>\r\n                {error && (\r\n                  <div className=\"col-12 my-3 bg-danger text-white p-3\">\r\n                    {error.message}\r\n                  </div>\r\n                )}\r\n              </form>\r\n            </>\r\n          ) : (\r\n            <p>\r\n              Please login to share your review.{' '}\r\n              <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\r\n            </p>\r\n          )}\r\n        </div>\r\n        \r\n      );\r\n    };\r\n    \r\n    \r\n    export default MovieReviewForm;\r\n\r\n\r\n\r\n\r\n","C:\\Users\\hayek\\class-work\\review-project\\client\\src\\components\\BookReviewList\\index.js",[],"C:\\Users\\hayek\\class-work\\review-project\\client\\src\\components\\GameReviewList\\index.js",["105"],"C:\\Users\\hayek\\class-work\\review-project\\client\\src\\components\\MovieReviewList\\index.js",["106"],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":11,"column":8,"nodeType":"113","messageId":"114","endLine":11,"endColumn":12},{"ruleId":"111","severity":1,"message":"115","line":7,"column":8,"nodeType":"113","messageId":"114","endLine":7,"endColumn":22},{"ruleId":"116","severity":1,"message":"117","line":41,"column":1,"nodeType":"118","endLine":41,"endColumn":34},{"ruleId":"111","severity":1,"message":"119","line":24,"column":19,"nodeType":"113","messageId":"114","endLine":24,"endColumn":23},{"ruleId":"111","severity":1,"message":"119","line":24,"column":19,"nodeType":"113","messageId":"114","endLine":24,"endColumn":23},{"ruleId":"111","severity":1,"message":"119","line":24,"column":19,"nodeType":"113","messageId":"114","endLine":24,"endColumn":23},{"ruleId":"120","severity":2,"message":"121","line":10,"column":10,"nodeType":"113","messageId":"122","endLine":10,"endColumn":20},{"ruleId":"120","severity":2,"message":"123","line":10,"column":8,"nodeType":"113","messageId":"122","endLine":10,"endColumn":19},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"no-unused-vars","'Home' is defined but never used.","Identifier","unusedVar","'BookReviewList' is defined but never used.","import/no-anonymous-default-export","Assign instance to a variable before exporting as module default","ExportDefaultDeclaration","'data' is assigned a value but never used.","no-undef","'gameReview' is not defined.","undef","'movieReview' is not defined.","no-global-assign","no-unsafe-negation"]